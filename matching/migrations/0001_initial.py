# Generated by Django 5.2.7 on 2025-10-12 06:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConnectionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('mutual', 'Mutual'), ('conversation', 'Conversation'), ('blocked', 'Blocked')], db_index=True, default='pending', help_text='Current state of the connection request', max_length=20)),
                ('message', models.TextField(blank=True, default='', help_text='Optional message from sender')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('mutual_at', models.DateTimeField(blank=True, null=True)),
                ('conversation_started_at', models.DateTimeField(blank=True, null=True)),
                ('receiver', models.ForeignKey(db_column='receiver_id', help_text='User who received the connection request', on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(db_column='sender_id', help_text='User who sent the connection request', on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Connection Request',
                'verbose_name_plural': 'Connection Requests',
                'db_table': 'connection_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user1', models.ForeignKey(db_column='user1_id', on_delete=django.db.models.deletion.CASCADE, related_name='connections_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(db_column='user2_id', on_delete=django.db.models.deletion.CASCADE, related_name='connections_as_user2', to=settings.AUTH_USER_MODEL)),
                ('connection_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='connection_records', to='matching.connectionrequest')),
            ],
            options={
                'verbose_name': 'Connection',
                'verbose_name_plural': 'Connections',
                'db_table': 'connections',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='connectionrequest',
            index=models.Index(fields=['sender', 'state'], name='idx_conn_req_sender_state'),
        ),
        migrations.AddIndex(
            model_name='connectionrequest',
            index=models.Index(fields=['receiver', 'state'], name='idx_conn_req_receiver_state'),
        ),
        migrations.AddIndex(
            model_name='connectionrequest',
            index=models.Index(fields=['state', 'created_at'], name='idx_conn_req_state_created'),
        ),
        migrations.AlterUniqueTogether(
            name='connectionrequest',
            unique_together={('sender', 'receiver')},
        ),
        migrations.AddIndex(
            model_name='connection',
            index=models.Index(fields=['user1', 'created_at'], name='idx_conn_user1_created'),
        ),
        migrations.AddIndex(
            model_name='connection',
            index=models.Index(fields=['user2', 'created_at'], name='idx_conn_user2_created'),
        ),
        migrations.AlterUniqueTogether(
            name='connection',
            unique_together={('user1', 'user2')},
        ),
    ]
