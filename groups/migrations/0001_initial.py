# Generated by Django 5.2.7 on 2025-10-30 13:38

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('learning', '0001_initial'),
        ('locations', '0003_add_gist_index_location_history'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_conversations',
            },
        ),
        migrations.CreateModel(
            name='GroupMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='groups.groupconversation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_group_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'group_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMessageRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_by', to='groups.groupmessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_group_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'group_message_reads',
                'ordering': ['read_at'],
            },
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('avatar_url', models.URLField(blank=True, help_text='Group profile image URL', null=True)),
                ('geom_point', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, help_text='Geographic center of the group', null=True, srid=4326)),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('invite_only', 'Invite Only')], default='public', max_length=20)),
                ('max_members', models.PositiveIntegerField(blank=True, help_text='Maximum number of members (null = unlimited)', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('archived', 'Archived')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_groups', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='study_groups', to='locations.school')),
                ('subjects', models.ManyToManyField(blank=True, related_name='study_groups', to='learning.subject')),
            ],
            options={
                'db_table': 'study_groups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('moderator', 'Moderator'), ('member', 'Member')], default='member', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('invited', 'Invited'), ('removed', 'Removed'), ('left', 'Left')], default='active', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_group_invites', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='groups.studygroup')),
            ],
            options={
                'db_table': 'group_memberships',
                'ordering': ['joined_at'],
            },
        ),
        migrations.AddField(
            model_name='groupconversation',
            name='group',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='conversation', to='groups.studygroup'),
        ),
        migrations.AddIndex(
            model_name='groupmessage',
            index=models.Index(fields=['conversation', 'created_at'], name='group_messa_convers_638124_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmessage',
            index=models.Index(fields=['sender'], name='group_messa_sender__a964e2_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmessageread',
            index=models.Index(fields=['message'], name='group_messa_message_d38bd0_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmessageread',
            index=models.Index(fields=['user', 'read_at'], name='group_messa_user_id_e7c58d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupmessageread',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='studygroup',
            index=models.Index(fields=['privacy'], name='study_group_privacy_e99541_idx'),
        ),
        migrations.AddIndex(
            model_name='studygroup',
            index=models.Index(fields=['status'], name='study_group_status_a4602e_idx'),
        ),
        migrations.AddIndex(
            model_name='studygroup',
            index=models.Index(fields=['school'], name='study_group_school__301f28_idx'),
        ),
        migrations.AddIndex(
            model_name='studygroup',
            index=models.Index(fields=['created_at'], name='study_group_created_f45fee_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['group', 'status'], name='group_membe_group_i_c1d485_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['user', 'status'], name='group_membe_user_id_291a14_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['role'], name='group_membe_role_ae792e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupmembership',
            unique_together={('group', 'user')},
        ),
    ]
